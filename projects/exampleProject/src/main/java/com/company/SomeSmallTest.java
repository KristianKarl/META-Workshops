package com.company;

import eye.Eye;
import net.sf.cglib.asm.$FieldVisitor;
import org.graphwalker.core.machine.ExecutionContext;
import org.graphwalker.java.annotation.BeforeExecution;
import org.junit.Assert;
import org.junit.internal.runners.statements.Fail;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.net.URL;

import static org.junit.Assert.fail;

/**
 * Implements the GraphWalker model: src/main/resources/SmallTest.json
 * <p/>
 * The interface SmallTest, that SomeSmallTest implements, is generated by
 * running: mvn graphwalker:generate-sources
 * also: mvn compile
 */
public class SomeSmallTest extends ExecutionContext implements SmallTest {

  private Eye eye;

  @BeforeExecution
  public void setup() {
    eye = new Eye();
  }

  @Override
  public void e_FirstAction() {
    Assert.assertTrue(
            "Could not click on the proceed to checkout button",
            eye.click(
                    eye.findImage(
                            getImage( "HelpIcon.png" )
                    ).getCenterLocation()
            )
    );
  }

  @Override
  public void e_AnotherAction() {
    System.out.println("Running: e_AnotherAction");
  }

  @Override
  public void e_SomeAction() {
    System.out.println("Running: e_SomeAction");
  }

  @Override
  public void e_SomeOtherAction() {
    System.out.println("Running: e_SomeOtherAction");
  }

  @Override
  public void v_VerifyInitialState() {
    Assert.assertNotNull("Could not find the Help Icon",
            eye.findImage(getImage( "HelpIcon.png" )));
  }

  @Override
  public void v_VerifyFirstAction() {
    Assert.assertNotNull("Could not find the Ubuntu DesktopGuide",
            eye.findImage(getImage( "UbuntuDesktopGuide.png" )));
  }

  @Override
  public void v_NewVertex() {
    System.out.println("Running: v_NewVertex");
  }

  private BufferedImage getImage( String fileStr ) {
    BufferedImage image = null;
    try {
      image = ImageIO.read(getClass().getResource("/img/" + fileStr));
      if (image == null) {
        fail("Could not load image: " + fileStr);
      }
    } catch (IOException e) {
      e.printStackTrace();
    }
    return image;
  }
}
